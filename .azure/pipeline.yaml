trigger:
  batch: true
  branches:
    include:
      - main

pr:
  branches:
    include:
      - "*"
resources:
  repositories:
    - repository: pipeline-templates
      type: github
      name: ogcio/building-blocks-pipelines
      ref: main
      endpoint: ogcio

stages:
  - stage: setup
    displayName: Setup Dependencies
    dependsOn: []
    jobs:
      - job: SetupDependencies
        displayName: Setup pnpm and Install Dependencies
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - template: templates/pnpm-install.yaml

  - stage: securityScan
    displayName: Security Scans
    dependsOn: []
    pool:
      vmImage: "ubuntu-latest"
    jobs:
      - template: security/gitleaks.yml@pipeline-templates
      # TODO: Uncomment when KICS is ready ( Timeout processing the results of the query: openAPI array_without_maximum_number_items error="context deadline exceeded )
      # - job:
      #   displayName: Checkmarx KICS
      #   pool:
      #     vmImage: "ubuntu-latest"
      #   container: checkmarx/kics:debian
      #   steps:
      #     - script: /app/bin/kics scan -p ${PWD} -o ${PWD} --report-formats "json,JUnit" --output-name kics-result --ci --fail-on 'critical,high' --config ./kics-config.json
      #       displayName: KICS Scan
      #     - script: cat kics-result.json
      #       condition: succeededOrFailed()
      #       displayName: KICS Results
      #     - task: PublishTestResults@2
      #       condition: succeededOrFailed()
      #       inputs:
      #         testResultsFormat: "JUnit"
      #         testResultsFiles: "$(System.DefaultWorkingDirectory)/junit-kics-result.xml"

  - stage: lintingAndFormatting
    displayName: Linting and Formatting Checks
    dependsOn: setup
    jobs:
      - job: LintAndFormat
        displayName: Run Linting and Formatting
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - template: templates/pnpm-install.yaml
          - script: |
              pnpm run check:linting
              pnpm run check:formatting
            displayName: "Run Linting and Formatting"

  - stage: checksCompleted
    displayName: Checks Completed
    dependsOn:
      - lintingAndFormatting
      - securityScan
    jobs:
      - job: ChecksCompleted
        steps:
          - script: echo "All checks completed"

  - stage: testBuildingBlocksSdk
    displayName: Testing Building Blocks SDK
    dependsOn: checksCompleted
    jobs:
      - job: RunTests
        displayName: Run Tests
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - template: templates/pnpm-install.yaml
          - script: |
              pnpm run test
            displayName: "Run Building Blocks SDK Tests"
          - task: PublishTestResults@2
            inputs:
              testResultsFiles: "$(System.DefaultWorkingDirectory)/results.xml"
              testRunTitle: "Building Blocks SDK Tests Report"
              mergeTestResults: true
          - task: PublishCodeCoverageResults@2
            inputs:
              summaryFileLocation: "$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml"

  - stage: buildBuildingBlocksSdk
    displayName: Build Building Blocks SDK
    dependsOn: checksCompleted
    jobs:
      - job: BuildSdk
        steps:
          - template: templates/pnpm-install.yaml
          - script: |
              pnpm run build
            displayName: "Build Building Blocks SDK"

  - stage: buildNextJs14TestApp
    displayName: Build NextJs 14 app with installed Building Blocks SDK
    dependsOn: buildBuildingBlocksSdk
    jobs:
      - job: BuildNextJs14
        steps:
          - template: templates/pnpm-install.yaml
          - script: |
              pnpm run build
            workingDirectory: $(System.DefaultWorkingDirectory)/test-frameworks/nextjs-14-testing-app
            displayName: "Build NextJs 14 app"

  - stage: checkTestBuildApprovalGateways
    displayName: Test and Build Approval Gateways
    dependsOn:
      - testBuildingBlocksSdk
      - buildBuildingBlocksSdk
      - buildNextJs14TestApp
    jobs:
      - job: CheckTestBuildApprovalGateways
        steps:
          - script: echo "All tests and build completed"
