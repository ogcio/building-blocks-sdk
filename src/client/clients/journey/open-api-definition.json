{
  "openapi": "3.0.3",
  "info": {
    "title": "OGCIO Journey API",
    "description": "API for OGCIO Journey Service",
    "version": "0.1.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from authentication service"
      }
    },
    "schemas": {}
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "tags": [
          "Health"
        ],
        "description": "Returns the health status of the API. This endpoint does not require authentication.",
        "security": [],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "summary": "Application version endpoint",
        "tags": [
          "Version"
        ],
        "description": "Returns the current version of the API.",
        "security": [],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/journeys/": {
      "get": {
        "operationId": "getJourneys",
        "summary": "Get journeys",
        "tags": [
          "Journeys"
        ],
        "description": "Retrieve a paginated list of journeys with optional filtering by IDs, search terms, date range, and status",
        "parameters": [
          {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "number"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "minimum": 5,
              "maximum": 50,
              "multipleOf": 5,
              "type": "number"
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "in": "query",
            "name": "ids",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "from",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "to",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "validator": {
                                  "name": "RequiredValidator",
                                  "options": {
                                    "parentField": "title"
                                  }
                                },
                                "type": "string"
                              },
                              "ga": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "en"
                            ]
                          },
                          "userId": {
                            "type": "string"
                          },
                          "organizationId": {
                            "type": "string"
                          },
                          "status": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "active"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "inactive"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "draft"
                                ]
                              }
                            ]
                          },
                          "initialStepId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "allowedAuthMethods": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "userName": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "userId",
                          "organizationId",
                          "status",
                          "initialStepId",
                          "createdAt",
                          "updatedAt",
                          "allowedAuthMethods",
                          "userName"
                        ]
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createJourney",
        "summary": "Create journey",
        "tags": [
          "Journeys"
        ],
        "description": "Create a new journey with the specified configuration and steps",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "object",
                    "properties": {
                      "en": {
                        "validator": {
                          "name": "RequiredValidator",
                          "options": {
                            "parentField": "title"
                          }
                        },
                        "type": "string"
                      },
                      "ga": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "en"
                    ]
                  },
                  "allowedAuthMethods": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "organizationId": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "allowedAuthMethods",
                  "organizationId",
                  "userId"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/journeys/{journeyId}": {
      "get": {
        "operationId": "getJourneyById",
        "summary": "Get journey by ID",
        "tags": [
          "Journeys"
        ],
        "description": "Retrieve detailed information about a specific journey including all steps and connections",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "journeyId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "title": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "validator": {
                                "name": "RequiredValidator",
                                "options": {
                                  "parentField": "title"
                                }
                              },
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "userId": {
                          "type": "string"
                        },
                        "organizationId": {
                          "type": "string"
                        },
                        "status": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "active"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "inactive"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "draft"
                              ]
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "initialStepId": {
                          "type": "string"
                        },
                        "allowedAuthMethods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "steps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "journeyId": {
                                "type": "string"
                              },
                              "stepType": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "title"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "form"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "payment"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "messaging"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "complete"
                                    ]
                                  }
                                ]
                              },
                              "stepData": {
                                "anyOf": [
                                  {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "formId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "formId"
                                    ]
                                  },
                                  {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "paymentRequestId": {
                                        "type": "string"
                                      },
                                      "title": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "paymentRequestId",
                                      "title"
                                    ]
                                  },
                                  {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "templateId": {
                                        "type": "string"
                                      },
                                      "title": {
                                        "type": "string"
                                      },
                                      "recipients": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "generatePDF": {
                                        "type": "boolean"
                                      },
                                      "uiConfig": {
                                        "type": "object",
                                        "properties": {
                                          "setupPageVersion": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "setupPageVersion"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "templateId",
                                      "title",
                                      "recipients",
                                      "generatePDF",
                                      "uiConfig"
                                    ]
                                  },
                                  {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "buttonLabel": {
                                        "type": "object",
                                        "properties": {
                                          "en": {
                                            "type": "string"
                                          },
                                          "ga": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "en"
                                        ]
                                      },
                                      "returnUrl": {
                                        "validator": "URLValidator",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "buttonLabel",
                                      "returnUrl"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "uiConfig": {
                                        "type": "object",
                                        "properties": {
                                          "setupPageVersion": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "configured": {
                                "type": "boolean"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "journeyId",
                              "stepType",
                              "stepData",
                              "configured",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        },
                        "connections": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "sourceStepId": {
                                "type": "string"
                              },
                              "destinationStepId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "sourceStepId",
                              "destinationStepId"
                            ]
                          }
                        },
                        "userName": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "title",
                        "userId",
                        "organizationId",
                        "status",
                        "createdAt",
                        "updatedAt",
                        "initialStepId",
                        "allowedAuthMethods",
                        "steps",
                        "connections",
                        "userName"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateJourney",
        "summary": "Update journey",
        "tags": [
          "Journeys"
        ],
        "description": "Update an existing journey with new configuration and steps",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "object",
                    "properties": {
                      "en": {
                        "validator": {
                          "name": "RequiredValidator",
                          "options": {
                            "parentField": "title"
                          }
                        },
                        "type": "string"
                      },
                      "ga": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "en"
                    ]
                  },
                  "status": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "active"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "inactive"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "draft"
                        ]
                      }
                    ]
                  },
                  "initialStepId": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "status",
                  "initialStepId"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "journeyId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteJourney",
        "summary": "Delete journey",
        "tags": [
          "Journeys"
        ],
        "description": "Delete a journey with no existing runs",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "journeyId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "ok": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "ok"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/journeys/{journeyId}/public-info": {
      "get": {
        "operationId": "getJourneyPublicInfo",
        "summary": "Get journey public info",
        "tags": [
          "Journeys"
        ],
        "description": "Retrieve public information about a journey that can be accessed without authentication",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "journeyId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "title": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "validator": {
                                "name": "RequiredValidator",
                                "options": {
                                  "parentField": "title"
                                }
                              },
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "status": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "active"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "inactive"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "draft"
                              ]
                            }
                          ]
                        },
                        "initialStepId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "allowedAuthMethods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "id",
                        "title",
                        "status",
                        "initialStepId",
                        "createdAt",
                        "updatedAt",
                        "allowedAuthMethods"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/journeys/{journeyId}/schema": {
      "get": {
        "operationId": "getJourneySchema",
        "summary": "Get journey schema",
        "tags": [
          "Journeys"
        ],
        "description": "Retrieve the complete schema for a journey including all step schemas and connections",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "journeyId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "journeyId": {
                          "type": "string"
                        },
                        "jounrneyTitle": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "steps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "stepId": {
                                "type": "string"
                              },
                              "type": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "title"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "form"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "payment"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "messaging"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "complete"
                                    ]
                                  }
                                ]
                              },
                              "resourceId": {
                                "type": "string"
                              },
                              "stepSchema": {}
                            },
                            "required": [
                              "stepId",
                              "type",
                              "resourceId"
                            ]
                          }
                        },
                        "stepConnections": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "sourceStepId": {
                                "type": "string"
                              },
                              "destinationStepId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "sourceStepId",
                              "destinationStepId"
                            ]
                          }
                        }
                      },
                      "required": [
                        "journeyId",
                        "jounrneyTitle",
                        "steps",
                        "stepConnections"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/journey_step_connections/{connectionId}": {
      "get": {
        "operationId": "getStepConnectionById",
        "summary": "Get step connection by ID",
        "tags": [
          "Step Connections"
        ],
        "description": "Retrieve detailed information about a specific step connection",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "connectionId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "sourceStepId": {
                          "type": "string"
                        },
                        "destinationStepId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "sourceStepId",
                        "destinationStepId"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteStepConnection",
        "summary": "Delete step connection",
        "tags": [
          "Step Connections"
        ],
        "description": "Delete a specific step connection by ID",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "connectionId",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {}
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/journey_step_connections/": {
      "post": {
        "operationId": "createStepConnection",
        "summary": "Create step connection",
        "tags": [
          "Step Connections"
        ],
        "description": "Create a new connection between two journey steps",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sourceStepId": {
                    "type": "string"
                  },
                  "destinationStepId": {
                    "type": "string"
                  },
                  "journeyId": {
                    "type": "string"
                  }
                },
                "required": [
                  "sourceStepId",
                  "destinationStepId",
                  "journeyId"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "sourceStepId": {
                          "type": "string"
                        },
                        "destinationStepId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "sourceStepId",
                        "destinationStepId"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/journey_steps/{stepId}": {
      "get": {
        "operationId": "getJourneyStepById",
        "summary": "Get journey step by ID",
        "tags": [
          "Journey Steps"
        ],
        "description": "Retrieve detailed information about a specific journey step",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "stepId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "journeyId": {
                          "type": "string"
                        },
                        "stepType": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "title"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "form"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "payment"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "messaging"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "complete"
                              ]
                            }
                          ]
                        },
                        "stepData": {
                          "anyOf": [
                            {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "formId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formId"
                              ]
                            },
                            {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "paymentRequestId": {
                                  "type": "string"
                                },
                                "title": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "paymentRequestId",
                                "title"
                              ]
                            },
                            {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "templateId": {
                                  "type": "string"
                                },
                                "title": {
                                  "type": "string"
                                },
                                "recipients": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "generatePDF": {
                                  "type": "boolean"
                                },
                                "uiConfig": {
                                  "type": "object",
                                  "properties": {
                                    "setupPageVersion": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "setupPageVersion"
                                  ]
                                }
                              },
                              "required": [
                                "templateId",
                                "title",
                                "recipients",
                                "generatePDF",
                                "uiConfig"
                              ]
                            },
                            {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "buttonLabel": {
                                  "type": "object",
                                  "properties": {
                                    "en": {
                                      "type": "string"
                                    },
                                    "ga": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "en"
                                  ]
                                },
                                "returnUrl": {
                                  "validator": "URLValidator",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "buttonLabel",
                                "returnUrl"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "uiConfig": {
                                  "type": "object",
                                  "properties": {
                                    "setupPageVersion": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "configured": {
                          "type": "boolean"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "journeyId",
                        "stepType",
                        "stepData",
                        "configured",
                        "createdAt",
                        "updatedAt"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteJourneyStep",
        "summary": "Delete journey step",
        "tags": [
          "Journey Steps"
        ],
        "description": "Delete a specific journey step by ID",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "stepId",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {}
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateJourneyStep",
        "summary": "Update journey step",
        "tags": [
          "Journey Steps"
        ],
        "description": "Update an existing journey step with new configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "stepData": {
                    "validator": {
                      "name": "StepDataValidator",
                      "options": {
                        "bypassRequired": false
                      }
                    },
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "formId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "formId"
                        ]
                      },
                      {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "paymentRequestId": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "paymentRequestId",
                          "title"
                        ]
                      },
                      {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "templateId": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "generatePDF": {
                            "type": "boolean"
                          },
                          "uiConfig": {
                            "type": "object",
                            "properties": {
                              "setupPageVersion": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "setupPageVersion"
                            ]
                          }
                        },
                        "required": [
                          "templateId",
                          "title",
                          "recipients",
                          "generatePDF",
                          "uiConfig"
                        ]
                      },
                      {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "buttonLabel": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "string"
                              },
                              "ga": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "en"
                            ]
                          },
                          "returnUrl": {
                            "validator": "URLValidator",
                            "type": "string"
                          }
                        },
                        "required": [
                          "buttonLabel",
                          "returnUrl"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "uiConfig": {
                            "type": "object",
                            "properties": {
                              "setupPageVersion": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "configured": {
                    "type": "boolean"
                  },
                  "stepType": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "title"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "form"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "payment"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "messaging"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "complete"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "stepData",
                  "configured",
                  "stepType"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "stepId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "journeyId": {
                          "type": "string"
                        },
                        "stepType": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "title"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "form"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "payment"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "messaging"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "complete"
                              ]
                            }
                          ]
                        },
                        "stepData": {
                          "anyOf": [
                            {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "formId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formId"
                              ]
                            },
                            {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "paymentRequestId": {
                                  "type": "string"
                                },
                                "title": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "paymentRequestId",
                                "title"
                              ]
                            },
                            {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "templateId": {
                                  "type": "string"
                                },
                                "title": {
                                  "type": "string"
                                },
                                "recipients": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "generatePDF": {
                                  "type": "boolean"
                                },
                                "uiConfig": {
                                  "type": "object",
                                  "properties": {
                                    "setupPageVersion": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "setupPageVersion"
                                  ]
                                }
                              },
                              "required": [
                                "templateId",
                                "title",
                                "recipients",
                                "generatePDF",
                                "uiConfig"
                              ]
                            },
                            {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "buttonLabel": {
                                  "type": "object",
                                  "properties": {
                                    "en": {
                                      "type": "string"
                                    },
                                    "ga": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "en"
                                  ]
                                },
                                "returnUrl": {
                                  "validator": "URLValidator",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "buttonLabel",
                                "returnUrl"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "uiConfig": {
                                  "type": "object",
                                  "properties": {
                                    "setupPageVersion": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "configured": {
                          "type": "boolean"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "journeyId",
                        "stepType",
                        "stepData",
                        "configured",
                        "createdAt",
                        "updatedAt"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/journey_steps/": {
      "post": {
        "operationId": "createJourneyStep",
        "summary": "Create journey step",
        "tags": [
          "Journey Steps"
        ],
        "description": "Create a new journey step with the specified configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "journeyId": {
                    "type": "string"
                  },
                  "stepType": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "title"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "form"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "payment"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "messaging"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "complete"
                        ]
                      }
                    ]
                  },
                  "configured": {
                    "type": "boolean"
                  },
                  "stepData": {
                    "validator": {
                      "name": "StepDataValidator",
                      "options": {
                        "bypassRequired": true
                      }
                    },
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "formId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "formId"
                        ]
                      },
                      {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "paymentRequestId": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "paymentRequestId",
                          "title"
                        ]
                      },
                      {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "templateId": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "generatePDF": {
                            "type": "boolean"
                          },
                          "uiConfig": {
                            "type": "object",
                            "properties": {
                              "setupPageVersion": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "setupPageVersion"
                            ]
                          }
                        },
                        "required": [
                          "templateId",
                          "title",
                          "recipients",
                          "generatePDF",
                          "uiConfig"
                        ]
                      },
                      {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "buttonLabel": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "string"
                              },
                              "ga": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "en"
                            ]
                          },
                          "returnUrl": {
                            "validator": "URLValidator",
                            "type": "string"
                          }
                        },
                        "required": [
                          "buttonLabel",
                          "returnUrl"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "uiConfig": {
                            "type": "object",
                            "properties": {
                              "setupPageVersion": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "journeyId",
                  "stepType",
                  "configured",
                  "stepData"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "journeyId": {
                          "type": "string"
                        },
                        "stepType": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "title"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "form"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "payment"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "messaging"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "complete"
                              ]
                            }
                          ]
                        },
                        "stepData": {
                          "anyOf": [
                            {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "formId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formId"
                              ]
                            },
                            {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "paymentRequestId": {
                                  "type": "string"
                                },
                                "title": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "paymentRequestId",
                                "title"
                              ]
                            },
                            {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "templateId": {
                                  "type": "string"
                                },
                                "title": {
                                  "type": "string"
                                },
                                "recipients": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "generatePDF": {
                                  "type": "boolean"
                                },
                                "uiConfig": {
                                  "type": "object",
                                  "properties": {
                                    "setupPageVersion": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "setupPageVersion"
                                  ]
                                }
                              },
                              "required": [
                                "templateId",
                                "title",
                                "recipients",
                                "generatePDF",
                                "uiConfig"
                              ]
                            },
                            {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "buttonLabel": {
                                  "type": "object",
                                  "properties": {
                                    "en": {
                                      "type": "string"
                                    },
                                    "ga": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "en"
                                  ]
                                },
                                "returnUrl": {
                                  "validator": "URLValidator",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "buttonLabel",
                                "returnUrl"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "uiConfig": {
                                  "type": "object",
                                  "properties": {
                                    "setupPageVersion": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "configured": {
                          "type": "boolean"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "journeyId",
                        "stepType",
                        "stepData",
                        "configured",
                        "createdAt",
                        "updatedAt"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executor/runs/self": {
      "get": {
        "operationId": "getUserRuns",
        "summary": "Get user runs",
        "tags": [
          "Runs"
        ],
        "description": "Retrieve all runs created by the authenticated user",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "journeyId": {
                            "type": "string"
                          },
                          "status": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "initiated"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "submitted"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "processing"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "completed"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "cancelled"
                                ]
                              }
                            ]
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "choosenAuthMethod": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "userId",
                          "journeyId",
                          "status",
                          "tags",
                          "createdAt",
                          "updatedAt",
                          "choosenAuthMethod"
                        ]
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executor/runs/self/{runId}": {
      "get": {
        "operationId": "getUserRunById",
        "summary": "Get user run by ID",
        "tags": [
          "Runs"
        ],
        "description": "Retrieve detailed information about a specific run created by the authenticated user",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "runId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "userId": {
                          "type": "string"
                        },
                        "journeyId": {
                          "type": "string"
                        },
                        "status": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "initiated"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "submitted"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "processing"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "completed"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "cancelled"
                              ]
                            }
                          ]
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "steps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "runId": {
                                "type": "string"
                              },
                              "stepId": {
                                "type": "string"
                              },
                              "stepType": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "title"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "form"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "payment"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "messaging"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "complete"
                                    ]
                                  }
                                ]
                              },
                              "status": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "pending"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "in_progress"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "failed"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "completed"
                                    ]
                                  }
                                ]
                              },
                              "data": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "formSubmissionId": {
                                        "type": "string"
                                      },
                                      "amount": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "formSubmissionId"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "transactionId": {
                                        "type": "string"
                                      },
                                      "amount": {
                                        "type": "number"
                                      },
                                      "date": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "transactionId",
                                      "amount",
                                      "date",
                                      "provider"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {}
                                  }
                                ]
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "runId",
                              "stepId",
                              "stepType",
                              "status",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        },
                        "choosenAuthMethod": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "userId",
                        "journeyId",
                        "status",
                        "tags",
                        "createdAt",
                        "updatedAt",
                        "steps",
                        "choosenAuthMethod"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executor/runs/journeys/{journeyId}": {
      "get": {
        "operationId": "getRunsByJourneyId",
        "summary": "Get runs by journey ID",
        "tags": [
          "Runs"
        ],
        "description": "Retrieve all runs for a specific journey (public servant access)",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "journeyId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "journeyId": {
                            "type": "string"
                          },
                          "status": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "initiated"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "submitted"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "processing"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "completed"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "cancelled"
                                ]
                              }
                            ]
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "choosenAuthMethod": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "userId",
                          "journeyId",
                          "status",
                          "tags",
                          "createdAt",
                          "updatedAt",
                          "choosenAuthMethod"
                        ]
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executor/runs/{runId}": {
      "get": {
        "operationId": "getRunById",
        "summary": "Get run by ID",
        "tags": [
          "Runs"
        ],
        "description": "Retrieve detailed information about a specific run (public servant access)",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "runId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "userId": {
                          "type": "string"
                        },
                        "journeyId": {
                          "type": "string"
                        },
                        "status": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "initiated"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "submitted"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "processing"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "completed"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "cancelled"
                              ]
                            }
                          ]
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "steps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "runId": {
                                "type": "string"
                              },
                              "stepId": {
                                "type": "string"
                              },
                              "stepType": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "title"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "form"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "payment"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "messaging"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "complete"
                                    ]
                                  }
                                ]
                              },
                              "status": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "pending"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "in_progress"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "failed"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "completed"
                                    ]
                                  }
                                ]
                              },
                              "data": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "formSubmissionId": {
                                        "type": "string"
                                      },
                                      "amount": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "formSubmissionId"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "transactionId": {
                                        "type": "string"
                                      },
                                      "amount": {
                                        "type": "number"
                                      },
                                      "date": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "transactionId",
                                      "amount",
                                      "date",
                                      "provider"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {}
                                  }
                                ]
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "runId",
                              "stepId",
                              "stepType",
                              "status",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        },
                        "choosenAuthMethod": {
                          "type": "string"
                        },
                        "userEmail": {
                          "type": "string"
                        },
                        "organizationId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "userId",
                        "journeyId",
                        "status",
                        "tags",
                        "createdAt",
                        "updatedAt",
                        "steps",
                        "choosenAuthMethod",
                        "organizationId"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteRun",
        "summary": "Delete run",
        "tags": [
          "Runs"
        ],
        "description": "Delete a specific run by ID",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "runId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "success"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateRunStatus",
        "summary": "Update run status",
        "tags": [
          "Runs"
        ],
        "description": "Update the status of a specific run",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "initiated"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "submitted"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "processing"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "completed"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "cancelled"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "runId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "initiated"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "submitted"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "processing"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "completed"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "cancelled"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "status"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executor/runs": {
      "get": {
        "operationId": "getAllRuns",
        "summary": "Get all runs",
        "tags": [
          "Runs"
        ],
        "description": "Retrieve all runs with pagination and filtering (public servant access)",
        "parameters": [
          {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "number"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "minimum": 5,
              "maximum": 50,
              "multipleOf": 5,
              "type": "number"
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "journeyId",
            "required": false
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "initiated"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "submitted"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "processing"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "completed"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "cancelled"
                  ]
                }
              ]
            },
            "in": "query",
            "name": "status",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "to",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "from",
            "required": false
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "in": "query",
            "name": "tags",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "journeyId": {
                            "type": "string"
                          },
                          "status": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "initiated"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "submitted"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "processing"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "completed"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "cancelled"
                                ]
                              }
                            ]
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "choosenAuthMethod": {
                            "type": "string"
                          },
                          "organizationId": {
                            "type": "string"
                          },
                          "journeyTitle": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "string"
                              },
                              "ga": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "en"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "userId",
                          "journeyId",
                          "status",
                          "tags",
                          "createdAt",
                          "updatedAt",
                          "choosenAuthMethod",
                          "organizationId",
                          "journeyTitle"
                        ]
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executor/runs/tags": {
      "get": {
        "operationId": "getRunTags",
        "summary": "Get run tags",
        "tags": [
          "Runs"
        ],
        "description": "Retrieve available tags for runs based on filtering criteria",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "journeyId",
            "required": false
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "initiated"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "submitted"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "processing"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "completed"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "cancelled"
                  ]
                }
              ]
            },
            "in": "query",
            "name": "status",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "to",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "from",
            "required": false
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "in": "query",
            "name": "tags",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "tags"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executor/run": {
      "post": {
        "operationId": "createJourneyRun",
        "summary": "Create journey run",
        "tags": [
          "Executor"
        ],
        "description": "Create a new run for a specific journey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "journeyId": {
                    "type": "string"
                  }
                },
                "required": [
                  "journeyId"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executor/execute": {
      "post": {
        "operationId": "executeJourneyStep",
        "summary": "Execute journey step",
        "tags": [
          "Executor"
        ],
        "description": "Execute a specific step in a journey run",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "journeyId": {
                    "type": "string"
                  },
                  "runId": {
                    "type": "string"
                  },
                  "language": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "en"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "ga"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "journeyId",
                  "runId",
                  "language"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "stepId": {
                          "type": "string"
                        },
                        "stepType": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "title"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "form"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "payment"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "messaging"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "complete"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "url",
                        "stepId",
                        "stepType"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executor/transition": {
      "post": {
        "operationId": "transitionJourneyStep",
        "summary": "Transition journey step",
        "tags": [
          "Executor"
        ],
        "description": "Transition from one step to another in a journey run",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "journeyId": {
                    "type": "string"
                  },
                  "runId": {
                    "type": "string"
                  },
                  "runStepId": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "language": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "en"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "ga"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "journeyId",
                  "runId",
                  "runStepId",
                  "language"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "stepId": {
                          "type": "string"
                        },
                        "stepType": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "title"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "form"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "payment"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "messaging"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "complete"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "url",
                        "stepId",
                        "stepType"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executor/get-summary": {
      "post": {
        "operationId": "getJourneySummary",
        "summary": "Get journey summary",
        "tags": [
          "Executor"
        ],
        "description": "Retrieve a summary of a journey run including completion status and details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "journeyId": {
                    "type": "string"
                  },
                  "runId": {
                    "type": "string"
                  }
                },
                "required": [
                  "journeyId",
                  "runId"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "runId": {
                          "type": "string"
                        },
                        "title": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "actionLabel": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "returnUrl": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "runId",
                        "title",
                        "createdAt",
                        "actionLabel",
                        "returnUrl"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tester/resource-cleanup": {
      "delete": {
        "operationId": "cleanupTestResources",
        "summary": "Cleanup test resources",
        "tags": [
          "Tester"
        ],
        "description": "Clean up test resources for the organization (testing utility)",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auditLogs/": {
      "get": {
        "operationId": "listAuditLogEvents",
        "summary": "List Audit Log Events",
        "tags": [
          "Audit Logs"
        ],
        "description": "Retrieve a filtered list of audit log events for the organization. Supports filtering by event type, date range, and other criteria.",
        "parameters": [
          {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "number"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "minimum": 5,
              "maximum": 50,
              "multipleOf": 5,
              "type": "number"
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "resource",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "resourceId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "action",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "from",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "to",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "auditLogId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "eventType": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "organizationId": {
                            "type": "string"
                          },
                          "resourceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "auditLogId",
                          "createdAt",
                          "eventType",
                          "title"
                        ]
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auditLogs/event-types": {
      "get": {
        "operationId": "getAuditLogEventTypes",
        "summary": "Get Audit Log Event Types",
        "tags": [
          "Audit Logs"
        ],
        "description": "Retrieve a list of available audit log event types for filtering and categorization.",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auditLogs/{auditLogId}": {
      "get": {
        "operationId": "getAuditLogEventById",
        "summary": "Get Audit Log Event by ID",
        "tags": [
          "Audit Logs"
        ],
        "description": "Retrieve detailed information about a specific audit log event by its unique identifier.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "auditLogId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "auditLogId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "eventType": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "userId": {
                          "type": "string"
                        },
                        "organizationId": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object",
                          "additionalProperties": {}
                        }
                      },
                      "required": [
                        "auditLogId",
                        "createdAt",
                        "eventType",
                        "title",
                        "metadata"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:8009",
      "description": "Local development environment"
    },
    {
      "url": "https://journey-api.dev.services.gov.ie",
      "description": "Development environment"
    },
    {
      "url": "https://journey-api.uat.services.gov.ie",
      "description": "UAT environment"
    },
    {
      "url": "https://journey-api.services.gov.ie",
      "description": "Production environment"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Health",
      "description": "Health check and system status endpoints"
    },
    {
      "name": "Version",
      "description": "Application version information"
    },
    {
      "name": "Journeys",
      "description": "Manage journeys and their configuration"
    },
    {
      "name": "Journey Steps",
      "description": "Manage individual journey steps and their properties"
    },
    {
      "name": "Step Connections",
      "description": "Manage connections between journey steps"
    },
    {
      "name": "Executor",
      "description": "Execute journeys and manage journey runs"
    },
    {
      "name": "Runs",
      "description": "Manage and track journey execution runs"
    },
    {
      "name": "Audit Logs",
      "description": "Access and manage audit logs for compliance and monitoring"
    },
    {
      "name": "Tester",
      "description": "Testing and development utilities"
    }
  ]
}