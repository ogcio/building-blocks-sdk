{
  "openapi": "3.0.3",
  "info": {
    "title": "OGCIO Payment API",
    "description": "REST API for OGCIO Payment Service. This API is used by the Payments Building Block to manage payment providers, payment requests and transactions.",
    "version": "0.1.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from the authentication service"
      }
    },
    "schemas": {}
  },
  "paths": {
    "/.well-known/jwks.json": {
      "get": {
        "operationId": "getJwks",
        "summary": "Get JSON Web Key Set",
        "tags": [
          "Health"
        ],
        "description": "Retrieve the JSON Web Key Set (JWKS) containing public keys used to verify JWT tokens. This endpoint is used by services like Journey Builder to validate tokens which are sent through redirects between services.",
        "security": [],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "keys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "kty": {
                            "type": "string"
                          },
                          "kid": {
                            "type": "string"
                          },
                          "use": {
                            "type": "string"
                          },
                          "n": {
                            "type": "string"
                          },
                          "e": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "operationId": "healthCheck",
        "summary": "Health Check",
        "tags": [
          "Health"
        ],
        "description": "Check the health status of the payment API service. Returns the current operational status of the service.",
        "security": [],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "operationId": "getApiVersion",
        "summary": "Get API Version",
        "tags": [
          "Version"
        ],
        "description": "Retrieve the current version of the payment API service. Useful for client compatibility checks and debugging The version ID is the build ID and is generated while the pipeline runs.",
        "security": [],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/providers/": {
      "post": {
        "operationId": "createProvider",
        "summary": "Create Payment Provider",
        "tags": [
          "Providers"
        ],
        "description": "Create a new payment provider configuration for the organization. Supports multiple provider types including Stripe, Realex, Bank Transfer, and Open Banking.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "validator": "RequiredValidator",
                    "type": "string"
                  },
                  "type": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "banktransfer"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "openbanking"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "stripe"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "realex"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "worldpay"
                        ]
                      }
                    ]
                  },
                  "data": {
                    "validator": "ProvidersValidator",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "name",
                  "type",
                  "data"
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "name": "Stripe Production",
                    "type": "stripe",
                    "data": {
                      "livePublishableKey": "pk_live_51H1234567890abcdef",
                      "liveSecretKey": "sk_example_51H1234567890abcdef",
                      "webhookSigningKey": "whsec_1234567890abcdef"
                    }
                  }
                },
                "example2": {
                  "value": {
                    "name": "Realex Production",
                    "type": "realex",
                    "data": {
                      "merchantId": "merchant_1234567890",
                      "sharedSecret": "shared_secret_1234567890"
                    }
                  }
                },
                "example3": {
                  "value": {
                    "name": "Bank Transfer Provider",
                    "type": "banktransfer",
                    "data": {
                      "iban": "IE12BANK12345678901234",
                      "accountHolderName": "Government Services"
                    }
                  }
                },
                "example4": {
                  "value": {
                    "name": "Open Banking Provider",
                    "type": "openbanking",
                    "data": {
                      "iban": "IE12BANK12345678901234",
                      "accountHolderName": "Government Services"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "example": {
                        "id": "pr_1234567890abcdef"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "listProviders",
        "summary": "List Payment Providers",
        "tags": [
          "Providers"
        ],
        "description": "Retrieve a list of all payment providers configured for the organization.",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "banktransfer"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "openbanking"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "stripe"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "realex"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "worldpay"
                                ]
                              }
                            ]
                          },
                          "status": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "connected"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "disconnected"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "type",
                          "status"
                        ],
                        "example": {
                          "id": "prov_stripe_001",
                          "name": "Stripe Production",
                          "type": "stripe",
                          "status": "connected"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/providers/{providerId}": {
      "get": {
        "operationId": "getProviderById",
        "summary": "Get Provider by ID",
        "tags": [
          "Providers"
        ],
        "description": "Retrieve detailed information about a specific payment provider by its unique identifier.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "providerId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "banktransfer"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "openbanking"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "stripe"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "realex"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "worldpay"
                              ]
                            }
                          ]
                        },
                        "status": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "connected"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "disconnected"
                              ]
                            }
                          ]
                        },
                        "data": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "iban": {
                                  "type": "string"
                                },
                                "accountHolderName": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "iban",
                                "accountHolderName"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "iban": {
                                  "type": "string"
                                },
                                "accountHolderName": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "iban",
                                "accountHolderName"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "livePublishableKey": {
                                  "type": "string"
                                },
                                "liveSecretKey": {
                                  "type": "string"
                                },
                                "webhookSigningKey": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "livePublishableKey",
                                "liveSecretKey"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "merchantCode": {
                                  "type": "string"
                                },
                                "installationId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "merchantCode",
                                "installationId"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "merchantId": {
                                  "type": "string"
                                },
                                "sharedSecret": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "merchantId",
                                "sharedSecret"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "type",
                        "status",
                        "data"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateProvider",
        "summary": "Update Provider",
        "tags": [
          "Providers"
        ],
        "description": "Update an existing payment provider configuration. Allows modification of provider name, type, and configuration data.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "validator": "RequiredValidator",
                    "type": "string"
                  },
                  "type": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "banktransfer"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "openbanking"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "stripe"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "realex"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "worldpay"
                        ]
                      }
                    ]
                  },
                  "data": {
                    "validator": "ProvidersValidator",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "status": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "connected"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "disconnected"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "type",
                  "data",
                  "status"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "providerId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "ok": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "ok"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/requests/": {
      "get": {
        "operationId": "listPaymentRequests",
        "summary": "List Payment Requests",
        "tags": [
          "Payment Requests"
        ],
        "description": "Retrieve a paginated list of payment requests for the authenticated organization. Supports filtering and pagination.",
        "parameters": [
          {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "number"
            },
            "examples": {
              "0": {
                "value": 0
              },
              "10": {
                "value": 10
              },
              "20": {
                "value": 20
              },
              "50": {
                "value": 50
              }
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "minimum": 5,
              "maximum": 50,
              "multipleOf": 5,
              "type": "number"
            },
            "examples": {
              "10": {
                "value": 10
              },
              "20": {
                "value": 20
              },
              "50": {
                "value": 50
              }
            },
            "in": "query",
            "name": "limit",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "paymentRequestId": {
                            "type": "string"
                          },
                          "title": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "string"
                              },
                              "ga": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "en"
                            ]
                          },
                          "description": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "string"
                              },
                              "ga": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "en"
                            ]
                          },
                          "amount": {
                            "type": "number"
                          },
                          "reference": {
                            "type": "string"
                          },
                          "providers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "banktransfer"
                                      ]
                                    },
                                    {
                                      "type": "string",
                                      "enum": [
                                        "openbanking"
                                      ]
                                    },
                                    {
                                      "type": "string",
                                      "enum": [
                                        "stripe"
                                      ]
                                    },
                                    {
                                      "type": "string",
                                      "enum": [
                                        "realex"
                                      ]
                                    },
                                    {
                                      "type": "string",
                                      "enum": [
                                        "worldpay"
                                      ]
                                    }
                                  ]
                                },
                                "status": {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "connected"
                                      ]
                                    },
                                    {
                                      "type": "string",
                                      "enum": [
                                        "disconnected"
                                      ]
                                    }
                                  ]
                                },
                                "createdAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "userId",
                                "id",
                                "name",
                                "type",
                                "status",
                                "createdAt"
                              ]
                            }
                          },
                          "status": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "active"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "inactive"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "draft"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "paymentRequestId",
                          "title",
                          "providers",
                          "status"
                        ],
                        "example": {
                          "paymentRequestId": "pr_1234567890abcdef",
                          "title": {
                            "en": "Driver License Renewal Fee",
                            "ga": "Táille Athnuachana Ceadúnais Tiomána"
                          },
                          "description": {
                            "en": "Payment for renewing your driver license",
                            "ga": "Íocaíocht le haghaidh do cheadúnais tiomána a athnuachan"
                          },
                          "amount": 55,
                          "reference": "DLR-2024-001",
                          "providers": [
                            {
                              "userId": "user_123",
                              "id": "prov_stripe_001",
                              "name": "Stripe Production",
                              "type": "stripe",
                              "status": "connected",
                              "createdAt": "2024-01-15T10:30:00Z"
                            },
                            {
                              "userId": "user_123",
                              "id": "prov_realex_001",
                              "name": "Realex Production",
                              "type": "realex",
                              "status": "connected",
                              "createdAt": "2024-01-15T10:30:00Z"
                            }
                          ],
                          "status": "active"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createPaymentRequest",
        "summary": "Create Payment Request",
        "tags": [
          "Payment Requests"
        ],
        "description": "Create a new payment request for the organization. Payment requests define the details of a payment that citizens can make for government services.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "object",
                    "properties": {
                      "en": {
                        "validator": {
                          "name": "RequiredValidator",
                          "options": {
                            "useField": "title"
                          }
                        },
                        "type": "string"
                      },
                      "ga": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "en"
                    ]
                  },
                  "description": {
                    "type": "object",
                    "properties": {
                      "en": {
                        "validator": {
                          "name": "OptionalRequiredValidator",
                          "options": {
                            "useField": "description",
                            "field": "status",
                            "operation": "notEqual",
                            "value": "draft"
                          }
                        },
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "ga": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "en"
                    ]
                  },
                  "reference": {
                    "validator": {
                      "name": "OptionalRequiredValidator",
                      "options": {
                        "field": "status",
                        "operation": "notEqual",
                        "value": "draft"
                      }
                    },
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "amount": {
                    "validator": {
                      "name": "OptionalRequiredValidator",
                      "options": {
                        "field": "status",
                        "operation": "notEqual",
                        "value": "draft"
                      }
                    },
                    "anyOf": [
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "redirectUrl": {
                    "validator": {
                      "name": "OptionalRequiredValidator",
                      "options": {
                        "field": "status",
                        "operation": "notEqual",
                        "value": "draft"
                      }
                    },
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "allowAmountOverride": {
                    "type": "boolean"
                  },
                  "allowCustomAmount": {
                    "type": "boolean"
                  },
                  "providers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "status": {
                    "validator": "PaymentRequestStatusValidator",
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "active"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "inactive"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "draft"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "title",
                  "description",
                  "reference",
                  "amount",
                  "redirectUrl",
                  "allowAmountOverride",
                  "allowCustomAmount",
                  "providers",
                  "status"
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "title": {
                      "en": "Service Fee Payment",
                      "ga": "Táille Seirbhíse"
                    },
                    "description": {
                      "en": "Payment for government service processing",
                      "ga": "Íocaíocht le haghaidh próiseála seirbhíse rialtais"
                    },
                    "amount": 25,
                    "reference": "SVC-2024-001",
                    "redirectUrl": "https://example.com/success",
                    "allowAmountOverride": false,
                    "allowCustomAmount": false,
                    "providers": [
                      "prov_stripe_001",
                      "prov_realex_001"
                    ],
                    "status": "active"
                  }
                },
                "example2": {
                  "value": {
                    "title": {
                      "en": "Draft Service Fee",
                      "ga": "Táille Seirbhíse Dréachta"
                    },
                    "description": {
                      "en": null,
                      "ga": null
                    },
                    "amount": null,
                    "reference": null,
                    "redirectUrl": null,
                    "allowAmountOverride": true,
                    "allowCustomAmount": true,
                    "providers": [
                      "prov_stripe_001"
                    ],
                    "status": "draft"
                  }
                },
                "example3": {
                  "value": {
                    "title": {
                      "en": "Donation to Charity",
                      "ga": "Deontas do Charthanacht"
                    },
                    "description": {
                      "en": "Make a donation to support local charities",
                      "ga": "Tabhair deontas chun carthanacht áitiúil a thacú"
                    },
                    "amount": 10,
                    "reference": "DON-2024-001",
                    "redirectUrl": "https://example.com/donation-success",
                    "allowAmountOverride": true,
                    "allowCustomAmount": true,
                    "providers": [
                      "prov_stripe_001"
                    ],
                    "status": "active"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "example": {
                        "id": "pr_1234567890abcdef"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updatePaymentRequest",
        "summary": "Update Payment Request",
        "tags": [
          "Payment Requests"
        ],
        "description": "Update an existing payment request. Allows modification of request details, amount, status, and other properties.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "object",
                    "properties": {
                      "en": {
                        "validator": {
                          "name": "RequiredValidator",
                          "options": {
                            "useField": "title"
                          }
                        },
                        "type": "string"
                      },
                      "ga": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "en"
                    ]
                  },
                  "description": {
                    "type": "object",
                    "properties": {
                      "en": {
                        "validator": {
                          "name": "OptionalRequiredValidator",
                          "options": {
                            "useField": "description",
                            "field": "status",
                            "operation": "notEqual",
                            "value": "draft"
                          }
                        },
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "ga": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "en"
                    ]
                  },
                  "reference": {
                    "validator": {
                      "name": "OptionalRequiredValidator",
                      "options": {
                        "field": "status",
                        "operation": "notEqual",
                        "value": "draft"
                      }
                    },
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "amount": {
                    "validator": {
                      "name": "OptionalRequiredValidator",
                      "options": {
                        "field": "status",
                        "operation": "notEqual",
                        "value": "draft"
                      }
                    },
                    "anyOf": [
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "redirectUrl": {
                    "validator": {
                      "name": "OptionalRequiredValidator",
                      "options": {
                        "field": "status",
                        "operation": "notEqual",
                        "value": "draft"
                      }
                    },
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "allowAmountOverride": {
                    "type": "boolean"
                  },
                  "allowCustomAmount": {
                    "type": "boolean"
                  },
                  "providers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "status": {
                    "validator": "PaymentRequestStatusValidator",
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "active"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "inactive"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "draft"
                        ]
                      }
                    ]
                  },
                  "paymentRequestId": {
                    "type": "string"
                  },
                  "providersUpdate": {
                    "type": "object",
                    "properties": {
                      "toDisable": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "toCreate": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "toDisable",
                      "toCreate"
                    ]
                  }
                },
                "required": [
                  "title",
                  "description",
                  "reference",
                  "amount",
                  "redirectUrl",
                  "allowAmountOverride",
                  "allowCustomAmount",
                  "providers",
                  "status",
                  "paymentRequestId",
                  "providersUpdate"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "example": {
                        "id": "pr_1234567890abcdef"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/requests/external-info": {
      "get": {
        "operationId": "getExternalPaymentRequestInfo",
        "summary": "Get External Payment Request Info",
        "tags": [
          "Payment Requests"
        ],
        "description": "Retrieve basic information about payment requests for public display on other applications such as Journey Builder.",
        "parameters": [
          {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "number"
            },
            "examples": {
              "0": {
                "value": 0
              },
              "10": {
                "value": 10
              },
              "20": {
                "value": 20
              },
              "50": {
                "value": 50
              }
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "minimum": 5,
              "maximum": 50,
              "multipleOf": 5,
              "type": "number"
            },
            "examples": {
              "10": {
                "value": 10
              },
              "20": {
                "value": 20
              },
              "50": {
                "value": 50
              }
            },
            "in": "query",
            "name": "limit",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "paymentRequestId": {
                            "type": "string"
                          },
                          "title": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "string"
                              },
                              "ga": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "en"
                            ]
                          },
                          "description": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "string"
                              },
                              "ga": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "en"
                            ]
                          },
                          "amount": {
                            "type": "number"
                          },
                          "allowAmountOverride": {
                            "type": "boolean"
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "paymentRequestId",
                          "title",
                          "allowAmountOverride",
                          "createdAt"
                        ],
                        "example": {
                          "paymentRequestId": "pr_1234567890abcdef",
                          "title": {
                            "en": "Driver License Renewal Fee",
                            "ga": "Táille Athnuachana Ceadúnais Tiomána"
                          },
                          "description": {
                            "en": "Payment for renewing your driver license",
                            "ga": "Íocaíocht le haghaidh do cheadúnais tiomána a athnuachan"
                          },
                          "amount": 55,
                          "allowAmountOverride": false,
                          "createdAt": "2024-01-15T10:30:00Z"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/requests/{requestId}": {
      "get": {
        "operationId": "getPaymentRequestById",
        "summary": "Get Payment Request by ID",
        "tags": [
          "Payment Requests"
        ],
        "description": "Retrieve detailed information about a specific payment request by its unique identifier.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "requestId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "paymentRequestId": {
                          "type": "string"
                        },
                        "title": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "description": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "amount": {
                          "type": "number"
                        },
                        "reference": {
                          "type": "string"
                        },
                        "providers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "banktransfer"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "openbanking"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "stripe"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "realex"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "worldpay"
                                    ]
                                  }
                                ]
                              },
                              "status": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "connected"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "disconnected"
                                    ]
                                  }
                                ]
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "userId",
                              "id",
                              "name",
                              "type",
                              "status",
                              "createdAt"
                            ]
                          }
                        },
                        "status": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "active"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "inactive"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "draft"
                              ]
                            }
                          ]
                        },
                        "redirectUrl": {
                          "type": "string"
                        },
                        "allowAmountOverride": {
                          "type": "boolean"
                        },
                        "allowCustomAmount": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "paymentRequestId",
                        "title",
                        "providers",
                        "status",
                        "allowAmountOverride",
                        "allowCustomAmount"
                      ],
                      "example": {
                        "paymentRequestId": "pr_1234567890abcdef",
                        "title": {
                          "en": "Driver License Renewal Fee",
                          "ga": "Táille Athnuachana Ceadúnais Tiomána"
                        },
                        "description": {
                          "en": "Payment for renewing your driver license",
                          "ga": "Íocaíocht le haghaidh do cheadúnais tiomána a athnuachan"
                        },
                        "amount": 55,
                        "reference": "DLR-2024-001",
                        "providers": [
                          {
                            "userId": "user_123",
                            "id": "prov_stripe_001",
                            "name": "Stripe Production",
                            "type": "stripe",
                            "status": "connected",
                            "createdAt": "2024-01-15T10:30:00Z"
                          },
                          {
                            "userId": "user_123",
                            "id": "prov_realex_001",
                            "name": "Realex Production",
                            "type": "realex",
                            "status": "connected",
                            "createdAt": "2024-01-15T10:30:00Z"
                          }
                        ],
                        "status": "active",
                        "redirectUrl": "https://example.com/payment-success",
                        "allowAmountOverride": false,
                        "allowCustomAmount": false
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deletePaymentRequest",
        "summary": "Delete Payment Request",
        "tags": [
          "Payment Requests"
        ],
        "description": "Delete a payment request by its unique identifier. This action is irreversible.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "requestId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/requests/{requestId}/public-info": {
      "get": {
        "operationId": "getPublicPaymentRequestInfo",
        "summary": "Get Public Payment Request Info",
        "tags": [
          "Payment Requests"
        ],
        "description": "Retrieve public information about a specific payment request. This endpoint provides citizen-facing information without sensitive details.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "requestId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "paymentRequestId": {
                          "type": "string"
                        },
                        "title": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "description": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "amount": {
                          "type": "number"
                        },
                        "reference": {
                          "type": "string"
                        },
                        "providers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "banktransfer"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "openbanking"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "stripe"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "realex"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "worldpay"
                                    ]
                                  }
                                ]
                              },
                              "status": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "connected"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "disconnected"
                                    ]
                                  }
                                ]
                              },
                              "data": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "iban": {
                                        "type": "string"
                                      },
                                      "accountHolderName": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "iban",
                                      "accountHolderName"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "livePublishableKey": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "livePublishableKey"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {}
                                  }
                                ]
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "userId",
                              "id",
                              "name",
                              "type",
                              "status",
                              "data",
                              "createdAt"
                            ]
                          }
                        },
                        "status": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "active"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "inactive"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "draft"
                              ]
                            }
                          ]
                        },
                        "redirectUrl": {
                          "type": "string"
                        },
                        "allowAmountOverride": {
                          "type": "boolean"
                        },
                        "allowCustomAmount": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "paymentRequestId",
                        "title",
                        "amount",
                        "reference",
                        "providers",
                        "status",
                        "redirectUrl",
                        "allowAmountOverride",
                        "allowCustomAmount"
                      ],
                      "example": {
                        "paymentRequestId": "pr_1234567890abcdef",
                        "title": {
                          "en": "Driver License Renewal Fee",
                          "ga": "Táille Athnuachana Ceadúnais Tiomána"
                        },
                        "description": {
                          "en": "Payment for renewing your driver license",
                          "ga": "Íocaíocht le haghaidh do cheadúnais tiomána a athnuachan"
                        },
                        "amount": 55,
                        "reference": "DLR-2024-001",
                        "providers": [
                          {
                            "userId": "user_123",
                            "id": "prov_stripe_001",
                            "name": "Stripe Production",
                            "type": "stripe",
                            "status": "connected",
                            "data": {
                              "livePublishableKey": "pk_live_51H1234567890abcdef"
                            },
                            "createdAt": "2024-01-15T10:30:00Z"
                          }
                        ],
                        "status": "active",
                        "redirectUrl": "https://example.com/payment-success",
                        "allowAmountOverride": false,
                        "allowCustomAmount": false
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/requests/decode": {
      "post": {
        "operationId": "decodePaymentRequestToken",
        "summary": "Decode Payment Request Token",
        "tags": [
          "Payment Requests"
        ],
        "description": "Decode and validate a token coming from Journey Builder to retrieve the associated payment request information such as a custom amount requested.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              },
              "example": {
                "token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhbW91bnQiOiIyNS4wMCIsInJ1bklkIjoicnVuX2V4YW1wbGUxMjM0NTY3ODkwIiwiam91cm5leUlkIjoiam91cm5leV9leGFtcGxlMTIzNDU2Nzg5MCIsInJlZGlyZWN0VXJscyI6eyJlbiI6Imh0dHBzOi8vZXhhbXBsZS5jb20vc3VjY2VzcyIsImdhIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9zdWNjZXNzLWdhIn19.example_signature"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "runId": {
                          "type": "string"
                        },
                        "journeyId": {
                          "type": "string"
                        },
                        "redirectUrls": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en",
                            "ga"
                          ]
                        }
                      },
                      "required": [
                        "runId",
                        "journeyId",
                        "redirectUrls"
                      ],
                      "example": {
                        "amount": "25.00",
                        "runId": "run_1234567890",
                        "journeyId": "journey_1234567890",
                        "redirectUrls": {
                          "en": "https://example.com/success",
                          "ga": "https://example.com/success-ga"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/requests/{requestId}/transactions": {
      "get": {
        "operationId": "getPaymentRequestTransactions",
        "summary": "Get Payment Request Transactions",
        "tags": [
          "Transactions"
        ],
        "description": "Retrieve all transactions associated with a specific payment request. Supports pagination.",
        "parameters": [
          {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "number"
            },
            "examples": {
              "0": {
                "value": 0
              },
              "10": {
                "value": 10
              },
              "20": {
                "value": 20
              },
              "50": {
                "value": 50
              }
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "minimum": 5,
              "maximum": 50,
              "multipleOf": 5,
              "type": "number"
            },
            "examples": {
              "10": {
                "value": 10
              },
              "20": {
                "value": 20
              },
              "50": {
                "value": 50
              }
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "requestId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transactionId": {
                            "type": "string"
                          },
                          "status": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "initiated"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "pending"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "succeeded"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "cancelled"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "cancellation_requested"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "failed"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "refunded"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "refund_failed"
                                ]
                              }
                            ]
                          },
                          "amount": {
                            "minimum": 1,
                            "maximum": 1000000,
                            "type": "number"
                          },
                          "extPaymentId": {
                            "type": "string"
                          },
                          "paymentProviderId": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "title": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "string"
                              },
                              "ga": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "en"
                            ]
                          }
                        },
                        "required": [
                          "transactionId",
                          "status",
                          "amount",
                          "extPaymentId",
                          "paymentProviderId",
                          "updatedAt",
                          "title"
                        ],
                        "example": {
                          "transactionId": "tx_1234567890abcdef",
                          "status": "succeeded",
                          "amount": 25,
                          "extPaymentId": "pi_stripe_1234567890",
                          "paymentProviderId": "prov_stripe_001",
                          "updatedAt": "2024-01-15T14:30:00Z",
                          "title": {
                            "en": "Driver License Renewal Fee",
                            "ga": "Táille Athnuachana Ceadúnais Tiomána"
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/{transactionId}": {
      "get": {
        "operationId": "getTransactionById",
        "summary": "Get Transaction by ID",
        "tags": [
          "Transactions"
        ],
        "description": "Retrieve detailed information about a specific transaction by its unique identifier.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "transactionId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "transactionId": {
                          "type": "string"
                        },
                        "status": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "initiated"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "pending"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "succeeded"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "cancelled"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "cancellation_requested"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "failed"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "refunded"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "refund_failed"
                              ]
                            }
                          ]
                        },
                        "amount": {
                          "minimum": 1,
                          "maximum": 1000000,
                          "type": "number"
                        },
                        "extPaymentId": {
                          "allOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "string"
                            }
                          ]
                        },
                        "paymentProviderId": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "title": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "userId": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "runId": {
                              "type": "string"
                            },
                            "journeyId": {
                              "type": "string"
                            },
                            "journeyTitle": {
                              "type": "object",
                              "properties": {
                                "en": {
                                  "type": "string"
                                },
                                "ga": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "en"
                              ]
                            },
                            "redirectUrls": {
                              "type": "object",
                              "properties": {
                                "en": {
                                  "type": "string"
                                },
                                "ga": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "en",
                                "ga"
                              ]
                            },
                            "amount": {
                              "type": "string"
                            },
                            "providerData": {
                              "type": "object",
                              "properties": {
                                "chargeId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "chargeId"
                              ]
                            }
                          }
                        },
                        "description": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "providerName": {
                          "type": "string"
                        },
                        "providerType": {
                          "type": "string"
                        },
                        "paymentRequestId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "transactionId",
                        "status",
                        "amount",
                        "extPaymentId",
                        "paymentProviderId",
                        "updatedAt",
                        "title",
                        "userId",
                        "metadata",
                        "description",
                        "providerName",
                        "providerType",
                        "paymentRequestId"
                      ],
                      "example": {
                        "transactionId": "tx_1234567890abcdef",
                        "status": "succeeded",
                        "amount": 25,
                        "extPaymentId": "pi_stripe_1234567890",
                        "paymentProviderId": "prov_stripe_001",
                        "updatedAt": "2024-01-15T14:30:00Z",
                        "title": {
                          "en": "Driver License Renewal Fee",
                          "ga": "Táille Athnuachana Ceadúnais Tiomána"
                        },
                        "description": {
                          "en": "Payment for renewing your driver license",
                          "ga": "Íocaíocht le haghaidh do cheadúnais tiomána a athnuachan"
                        },
                        "providerName": "Stripe Production",
                        "providerType": "stripe",
                        "paymentRequestId": "pr_1234567890abcdef",
                        "userId": "user_1234567890",
                        "metadata": {
                          "runId": "run_1234567890",
                          "journeyId": "journey_1234567890",
                          "journeyTitle": {
                            "en": "Driver License Application",
                            "ga": "Iarratas ar Cheadúnas Tiomána"
                          },
                          "redirectUrls": {
                            "en": "https://example.com/success",
                            "ga": "https://example.com/success-ga"
                          },
                          "amount": "25.00",
                          "providerData": {
                            "chargeId": "ch_stripe_1234567890"
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Transactions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "initiated"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "pending"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "succeeded"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "cancelled"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "cancellation_requested"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "failed"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "refunded"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "refund_failed"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "status"
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "status": "succeeded"
                  }
                },
                "example2": {
                  "value": {
                    "status": "failed"
                  }
                },
                "example3": {
                  "value": {
                    "status": "cancelled"
                  }
                },
                "example4": {
                  "value": {
                    "status": "cancellation_requested"
                  }
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "transactionId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteTransaction",
        "summary": "Delete Transaction",
        "tags": [
          "Transactions"
        ],
        "description": "Delete a transaction by its unique identifier. This action is irreversible and should be used with caution.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "transactionId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "success"
                      ],
                      "example": {
                        "success": true
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/transactionId/{extPaymentId}": {
      "get": {
        "operationId": "getTransactionIdByExternalPaymentId",
        "summary": "Get Transaction ID by External Payment ID",
        "tags": [
          "Transactions"
        ],
        "description": "Retrieve the transaction ID using an external payment provider's payment ID, such as a Stripe intent ID or a Realex order ID.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "extPaymentId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "example": {
                        "id": "pr_1234567890abcdef"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/": {
      "get": {
        "operationId": "listTransactions",
        "summary": "List Transactions",
        "tags": [
          "Transactions"
        ],
        "description": "Retrieve a paginated list of transactions for the authenticated organization. Supports filtering and pagination.",
        "parameters": [
          {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "number"
            },
            "examples": {
              "0": {
                "value": 0
              },
              "10": {
                "value": 10
              },
              "20": {
                "value": 20
              },
              "50": {
                "value": 50
              }
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "minimum": 5,
              "maximum": 50,
              "multipleOf": 5,
              "type": "number"
            },
            "examples": {
              "10": {
                "value": 10
              },
              "20": {
                "value": 20
              },
              "50": {
                "value": 50
              }
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "from",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "to",
            "required": false
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "initiated"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "pending"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "succeeded"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "cancelled"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "cancellation_requested"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "failed"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "refunded"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "refund_failed"
                  ]
                }
              ],
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transactionId": {
                            "type": "string"
                          },
                          "status": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "initiated"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "pending"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "succeeded"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "cancelled"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "cancellation_requested"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "failed"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "refunded"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "refund_failed"
                                ]
                              }
                            ]
                          },
                          "amount": {
                            "minimum": 1,
                            "maximum": 1000000,
                            "type": "number"
                          },
                          "extPaymentId": {
                            "allOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string"
                              }
                            ]
                          },
                          "paymentProviderId": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "title": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "string"
                              },
                              "ga": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "en"
                            ]
                          },
                          "userId": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "runId": {
                                "type": "string"
                              },
                              "journeyId": {
                                "type": "string"
                              },
                              "journeyTitle": {
                                "type": "object",
                                "properties": {
                                  "en": {
                                    "type": "string"
                                  },
                                  "ga": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "en"
                                ]
                              },
                              "redirectUrls": {
                                "type": "object",
                                "properties": {
                                  "en": {
                                    "type": "string"
                                  },
                                  "ga": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "en",
                                  "ga"
                                ]
                              },
                              "amount": {
                                "type": "string"
                              },
                              "providerData": {
                                "type": "object",
                                "properties": {
                                  "chargeId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "chargeId"
                                ]
                              }
                            }
                          },
                          "description": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "string"
                              },
                              "ga": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "en"
                            ]
                          },
                          "providerName": {
                            "type": "string"
                          },
                          "providerType": {
                            "type": "string"
                          },
                          "paymentRequestId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "transactionId",
                          "status",
                          "amount",
                          "extPaymentId",
                          "paymentProviderId",
                          "updatedAt",
                          "title",
                          "userId",
                          "metadata",
                          "description",
                          "providerName",
                          "providerType",
                          "paymentRequestId"
                        ],
                        "example": {
                          "transactionId": "tx_1234567890abcdef",
                          "status": "succeeded",
                          "amount": 25,
                          "extPaymentId": "pi_stripe_1234567890",
                          "paymentProviderId": "prov_stripe_001",
                          "updatedAt": "2024-01-15T14:30:00Z",
                          "title": {
                            "en": "Driver License Renewal Fee",
                            "ga": "Táille Athnuachana Ceadúnais Tiomána"
                          },
                          "description": {
                            "en": "Payment for renewing your driver license",
                            "ga": "Íocaíocht le haghaidh do cheadúnais tiomána a athnuachan"
                          },
                          "providerName": "Stripe Production",
                          "providerType": "stripe",
                          "paymentRequestId": "pr_1234567890abcdef",
                          "userId": "user_1234567890",
                          "metadata": {
                            "runId": "run_1234567890",
                            "journeyId": "journey_1234567890",
                            "journeyTitle": {
                              "en": "Driver License Application",
                              "ga": "Iarratas ar Cheadúnas Tiomána"
                            },
                            "redirectUrls": {
                              "en": "https://example.com/success",
                              "ga": "https://example.com/success-ga"
                            },
                            "amount": "25.00",
                            "providerData": {
                              "chargeId": "ch_stripe_1234567890"
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createTransaction",
        "summary": "Create Transaction",
        "tags": [
          "Transactions"
        ],
        "description": "Create a new payment transaction. This endpoint is typically used by citizens to create new transactions for payment requests.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentRequestId": {
                    "type": "string"
                  },
                  "extPaymentId": {
                    "type": "string"
                  },
                  "amount": {
                    "minimum": 1,
                    "maximum": 1000000,
                    "type": "number"
                  },
                  "paymentProviderId": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "runId": {
                        "type": "string"
                      },
                      "journeyId": {
                        "type": "string"
                      },
                      "journeyTitle": {
                        "type": "object",
                        "properties": {
                          "en": {
                            "type": "string"
                          },
                          "ga": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "en"
                        ]
                      },
                      "redirectUrls": {
                        "type": "object",
                        "properties": {
                          "en": {
                            "type": "string"
                          },
                          "ga": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "en",
                          "ga"
                        ]
                      },
                      "amount": {
                        "type": "string"
                      },
                      "providerData": {
                        "type": "object",
                        "properties": {
                          "chargeId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "chargeId"
                        ]
                      }
                    }
                  },
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "paymentRequestId",
                  "extPaymentId",
                  "amount",
                  "paymentProviderId",
                  "metadata"
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "paymentRequestId": "pr_1234567890abcdef",
                    "extPaymentId": "pi_stripe_1234567890",
                    "amount": 25,
                    "paymentProviderId": "prov_stripe_001",
                    "metadata": {
                      "runId": "run_1234567890",
                      "journeyId": "journey_1234567890",
                      "journeyTitle": {
                        "en": "Driver License Application",
                        "ga": "Iarratas ar Cheadúnas Tiomána"
                      },
                      "redirectUrls": {
                        "en": "https://example.com/success",
                        "ga": "https://example.com/success-ga"
                      },
                      "amount": "25.00",
                      "providerData": {
                        "chargeId": "ch_stripe_1234567890"
                      }
                    },
                    "token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleGFtcGxlIjoiZXhhbXBsZV90b2tlbl9kYXRhIn0uZXhhbXBsZV9zaWduYXR1cmU"
                  }
                },
                "example2": {
                  "value": {
                    "paymentRequestId": "pr_0987654321fedcba",
                    "extPaymentId": "pi_realex_0987654321",
                    "amount": 80,
                    "paymentProviderId": "prov_realex_001",
                    "metadata": {
                      "runId": "run_0987654321",
                      "journeyId": "journey_0987654321",
                      "journeyTitle": {
                        "en": "Passport Application",
                        "ga": "Iarratas ar Phas"
                      },
                      "redirectUrls": {
                        "en": "https://example.com/passport-success",
                        "ga": "https://example.com/passport-success-ga"
                      },
                      "amount": "80.00"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "example": {
                        "id": "pr_1234567890abcdef"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/schema": {
      "get": {
        "operationId": "getTransactionSchema",
        "summary": "Get Transaction Schema",
        "tags": [
          "Transactions"
        ],
        "description": "Retrieve the JSON schema for transaction data structure.",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "examples": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string"
                          },
                          "transactionId": {
                            "type": "string"
                          },
                          "paymentRequestId": {
                            "type": "string"
                          },
                          "paymentRequestTitle": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "string"
                              },
                              "ga": {
                                "type": "string"
                              }
                            }
                          },
                          "amount": {
                            "type": "integer"
                          },
                          "extReferenceCode": {
                            "type": "string"
                          },
                          "paymentMethod": {
                            "type": "string"
                          },
                          "paymentProviderName": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "type": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "transactionId": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "paymentRequestId": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "paymentRequestTitle": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "en": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "ga": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "required": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "amount": {
                          "type": "object",
                          "properties": {
                            "minimum": {
                              "type": "integer"
                            },
                            "maximum": {
                              "type": "integer"
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "extReferenceCode": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "paymentMethod": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "paymentProviderName": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "anyOf": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "const": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "updatedAt": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "required": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/generatePaymentIntentId": {
      "get": {
        "operationId": "generatePaymentIntentId",
        "summary": "Generate Payment Intent ID",
        "tags": [
          "Transactions"
        ],
        "description": "Generate a unique payment intent ID for use with payment providers like Realex or Bank Transfer.",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "intentId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "intentId"
                      ],
                      "example": {
                        "intentId": "pi_1234567890abcdef"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/data/{transactionId}": {
      "get": {
        "operationId": "getTransactionData",
        "summary": "Get Transaction Data",
        "tags": [
          "Transactions"
        ],
        "description": "Retrieve transaction data for the journey service. This endpoint provides transaction information in a format suitable for external services.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "transactionId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string"
                        },
                        "transactionId": {
                          "type": "string"
                        },
                        "paymentRequestId": {
                          "type": "string"
                        },
                        "paymentRequestTitle": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "amount": {
                          "minimum": 1,
                          "maximum": 1000000,
                          "type": "number"
                        },
                        "extReferenceCode": {
                          "type": "string"
                        },
                        "paymentMethod": {
                          "type": "string"
                        },
                        "paymentProviderName": {
                          "type": "string"
                        },
                        "status": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "initiated"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "pending"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "succeeded"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "cancelled"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "cancellation_requested"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "failed"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "refunded"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "refund_failed"
                              ]
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "userId",
                        "transactionId",
                        "paymentRequestId",
                        "paymentRequestTitle",
                        "amount",
                        "extReferenceCode",
                        "paymentMethod",
                        "paymentProviderName",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "userId": "user_1234567890",
                        "transactionId": "tx_1234567890abcdef",
                        "paymentRequestId": "pr_1234567890abcdef",
                        "paymentRequestTitle": {
                          "en": "Driver License Renewal Fee",
                          "ga": "Táille Athnuachana Ceadúnais Tiomána"
                        },
                        "amount": 25,
                        "extReferenceCode": "pi_stripe_1234567890",
                        "paymentMethod": "card",
                        "paymentProviderName": "Stripe Production",
                        "status": "succeeded",
                        "createdAt": "2024-01-15T14:30:00Z",
                        "updatedAt": "2024-01-15T14:30:00Z"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/{transactionId}/token": {
      "get": {
        "operationId": "getTransactionToken",
        "summary": "Get Transaction Token",
        "tags": [
          "Transactions"
        ],
        "description": "Generate a secure token for a specific transaction to be used with Journey Builder.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "transactionId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "token"
                      ],
                      "example": {
                        "token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ1c2VyX2V4YW1wbGUxMjM0NTY3ODkwIiwidHJhbnNhY3Rpb25JZCI6InR4X2V4YW1wbGUxMjM0NTY3ODkwYWJjZGVmIiwiam1vdW50IjoyNS4wMCwiZGF0ZSI6IjIwMjQtMDEtMTVUMTQ6MzA6MDBaIiwicHJvdmlkZXIiOiJTdHJpcGUifS5leGFtcGxlX3NpZ25hdHVyZSIs"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/{transactionId}/refund": {
      "post": {
        "operationId": "createRefund",
        "summary": "Create Refund",
        "tags": [
          "Refunds"
        ],
        "description": "Create a refund for a specific transaction. This endpoint initiates the refund process for a completed payment. This feature is currently available only for Stripe.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  }
                },
                "required": [
                  "amount",
                  "reason"
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "amount": 25,
                    "reason": "Customer requested refund",
                    "notes": "Payment was made in error"
                  }
                },
                "example2": {
                  "value": {
                    "amount": 80,
                    "reason": "Service not provided",
                    "notes": "Application was rejected due to missing documentation"
                  }
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "transactionId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "status"
                      ],
                      "example": {
                        "status": "succeeded"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getRefundDetails",
        "summary": "Get Refund Details",
        "tags": [
          "Refunds"
        ],
        "description": "Retrieve detailed information about a refund for a specific transaction.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "transactionId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "transactionId": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number"
                        },
                        "status": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "pending"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "succeeded"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "failed"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "requires_action"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "canceled"
                              ]
                            }
                          ]
                        },
                        "type": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "full"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "partial"
                              ]
                            }
                          ]
                        },
                        "reason": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "organizationId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "transactionId",
                        "amount",
                        "status",
                        "type",
                        "reason",
                        "createdAt",
                        "updatedAt",
                        "username",
                        "organizationId"
                      ],
                      "example": {
                        "id": "ref_1234567890abcdef",
                        "transactionId": "tx_1234567890abcdef",
                        "amount": 25,
                        "status": "succeeded",
                        "type": "full",
                        "reason": "Customer requested refund",
                        "notes": "Payment was made in error",
                        "createdAt": "2024-01-15T15:00:00Z",
                        "updatedAt": "2024-01-15T15:05:00Z",
                        "username": "John Doe",
                        "organizationId": "org_1234567890"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/{transactionId}/cancel-payment": {
      "post": {
        "operationId": "cancelPayment",
        "summary": "Cancel Payment",
        "tags": [
          "Transactions"
        ],
        "description": "Cancel a payment transaction. This endpoint initiates the cancellation process for an active payment.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "transactionId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "success"
                      ],
                      "example": {
                        "success": true
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/citizen/transactions": {
      "get": {
        "operationId": "getCitizenTransactions",
        "summary": "Get Citizen Transactions",
        "tags": [
          "Citizen"
        ],
        "description": "Retrieve a paginated list of transactions for the authenticated citizen. This endpoint provides citizen-facing transaction information.",
        "parameters": [
          {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "number"
            },
            "examples": {
              "0": {
                "value": 0
              },
              "10": {
                "value": 10
              },
              "20": {
                "value": 20
              },
              "50": {
                "value": 50
              }
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "minimum": 5,
              "maximum": 50,
              "multipleOf": 5,
              "type": "number"
            },
            "examples": {
              "10": {
                "value": 10
              },
              "20": {
                "value": 20
              },
              "50": {
                "value": 50
              }
            },
            "in": "query",
            "name": "limit",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transactionId": {
                            "type": "string"
                          },
                          "status": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "initiated"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "pending"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "succeeded"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "cancelled"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "cancellation_requested"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "failed"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "refunded"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "refund_failed"
                                ]
                              }
                            ]
                          },
                          "title": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "string"
                              },
                              "ga": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "en"
                            ]
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "extPaymentId": {
                            "type": "string"
                          },
                          "amount": {
                            "minimum": 1,
                            "maximum": 1000000,
                            "type": "number"
                          }
                        },
                        "required": [
                          "transactionId",
                          "status",
                          "title",
                          "updatedAt",
                          "extPaymentId",
                          "amount"
                        ],
                        "example": {
                          "transactionId": "tx_1234567890abcdef",
                          "status": "succeeded",
                          "title": {
                            "en": "Driver License Renewal Fee",
                            "ga": "Táille Athnuachana Ceadúnais Tiomána"
                          },
                          "updatedAt": "2024-01-15T14:30:00Z",
                          "extPaymentId": "pi_stripe_1234567890",
                          "amount": 25
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/citizen/transactions/{transactionId}": {
      "get": {
        "operationId": "getCitizenTransactionById",
        "summary": "Get Citizen Transaction by ID",
        "tags": [
          "Transactions"
        ],
        "description": "Retrieve detailed information about a specific transaction for the authenticated citizen.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "transactionId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "transactionId": {
                          "type": "string"
                        },
                        "status": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "initiated"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "pending"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "succeeded"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "cancelled"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "cancellation_requested"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "failed"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "refunded"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "refund_failed"
                              ]
                            }
                          ]
                        },
                        "amount": {
                          "minimum": 1,
                          "maximum": 1000000,
                          "type": "number"
                        },
                        "extPaymentId": {
                          "allOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "string"
                            }
                          ]
                        },
                        "paymentProviderId": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "title": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "userId": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "runId": {
                              "type": "string"
                            },
                            "journeyId": {
                              "type": "string"
                            },
                            "journeyTitle": {
                              "type": "object",
                              "properties": {
                                "en": {
                                  "type": "string"
                                },
                                "ga": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "en"
                              ]
                            },
                            "redirectUrls": {
                              "type": "object",
                              "properties": {
                                "en": {
                                  "type": "string"
                                },
                                "ga": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "en",
                                "ga"
                              ]
                            },
                            "amount": {
                              "type": "string"
                            },
                            "providerData": {
                              "type": "object",
                              "properties": {
                                "chargeId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "chargeId"
                              ]
                            }
                          }
                        },
                        "description": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "type": "string"
                            },
                            "ga": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "en"
                          ]
                        },
                        "providerName": {
                          "type": "string"
                        },
                        "providerType": {
                          "type": "string"
                        },
                        "paymentRequestId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "transactionId",
                        "status",
                        "amount",
                        "extPaymentId",
                        "paymentProviderId",
                        "updatedAt",
                        "title",
                        "userId",
                        "metadata",
                        "description",
                        "providerName",
                        "providerType",
                        "paymentRequestId"
                      ],
                      "example": {
                        "transactionId": "tx_1234567890abcdef",
                        "status": "succeeded",
                        "amount": 25,
                        "extPaymentId": "pi_stripe_1234567890",
                        "paymentProviderId": "prov_stripe_001",
                        "updatedAt": "2024-01-15T14:30:00Z",
                        "title": {
                          "en": "Driver License Renewal Fee",
                          "ga": "Táille Athnuachana Ceadúnais Tiomána"
                        },
                        "description": {
                          "en": "Payment for renewing your driver license",
                          "ga": "Íocaíocht le haghaidh do cheadúnais tiomána a athnuachan"
                        },
                        "providerName": "Stripe Production",
                        "providerType": "stripe",
                        "paymentRequestId": "pr_1234567890abcdef",
                        "userId": "user_1234567890",
                        "metadata": {
                          "runId": "run_1234567890",
                          "journeyId": "journey_1234567890",
                          "journeyTitle": {
                            "en": "Driver License Application",
                            "ga": "Iarratas ar Cheadúnas Tiomána"
                          },
                          "redirectUrls": {
                            "en": "https://example.com/success",
                            "ga": "https://example.com/success-ga"
                          },
                          "amount": "25.00",
                          "providerData": {
                            "chargeId": "ch_stripe_1234567890"
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/realex/paymentObject": {
      "get": {
        "operationId": "getRealexPaymentObject",
        "summary": "Get Realex Payment Object",
        "tags": [
          "Realex"
        ],
        "description": "Generate a Realex payment object for processing payments through the Realex payment provider.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "amount",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "intentId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "providerId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "paymentRequestId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "token",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "ACCOUNT": {
                          "type": "string"
                        },
                        "AMOUNT": {
                          "type": "string"
                        },
                        "CURRENCY": {
                          "type": "string"
                        },
                        "MERCHANT_ID": {
                          "type": "string"
                        },
                        "ORDER_ID": {
                          "type": "string"
                        },
                        "TIMESTAMP": {
                          "type": "string"
                        },
                        "URL": {
                          "type": "string"
                        },
                        "SHA256HASH": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "ACCOUNT",
                        "AMOUNT",
                        "CURRENCY",
                        "MERCHANT_ID",
                        "ORDER_ID",
                        "TIMESTAMP",
                        "URL",
                        "SHA256HASH"
                      ],
                      "example": {
                        "ACCOUNT": "internet",
                        "AMOUNT": "2500",
                        "CURRENCY": "EUR",
                        "MERCHANT_ID": "merchant_1234567890",
                        "ORDER_ID": "pi_realex_1234567890",
                        "TIMESTAMP": "20240115143000",
                        "URL": "https://hpp.realexpayments.com/pay",
                        "SHA256HASH": "a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/realex/verifyPaymentResponse": {
      "post": {
        "operationId": "verifyRealexPaymentResponse",
        "summary": "Verify Realex Payment Response",
        "tags": [
          "Realex"
        ],
        "description": "Verify payment response from Realex payment provider. This endpoint is called by Realex upon payment completion to process the payment result.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customAmount",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "token",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "embed",
            "required": false
          }
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/realex/statusUpdate": {
      "get": {
        "operationId": "handleRealexStatusUpdate",
        "summary": "Realex Status Update",
        "tags": [
          "Realex"
        ],
        "description": "Handle status updates from Realex payment provider. This endpoint receives payment status notifications from Realex.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sha1hash",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "timestamp",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "merchantid",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "orderid",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "result",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "message",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "pasref",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "paymentmethod",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "waitfornotification",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fundstatus",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "paymentpurpose",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "acountholdername",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "country",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "accountnumber",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "iban",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "bic",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "bankname",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "bankcode",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "redirectoptional",
            "required": true
          }
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/v1/auditLogs/": {
      "get": {
        "operationId": "listAuditLogEvents",
        "summary": "List Audit Log Events",
        "tags": [
          "Audit Logs"
        ],
        "description": "Retrieve a filtered list of audit log events for the organization. Supports filtering by event type, date range, and other criteria.",
        "parameters": [
          {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "number"
            },
            "examples": {
              "0": {
                "value": 0
              },
              "10": {
                "value": 10
              },
              "20": {
                "value": 20
              },
              "50": {
                "value": 50
              }
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "minimum": 5,
              "maximum": 50,
              "multipleOf": 5,
              "type": "number"
            },
            "examples": {
              "10": {
                "value": 10
              },
              "20": {
                "value": 20
              },
              "50": {
                "value": 50
              }
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "resource",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "resourceId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "action",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "userId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "from",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "to",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "auditLogId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "eventType": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "organizationId": {
                            "type": "string"
                          },
                          "resourceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "auditLogId",
                          "createdAt",
                          "eventType",
                          "title"
                        ]
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auditLogs/event-types": {
      "get": {
        "operationId": "getAuditLogEventTypes",
        "summary": "Get Audit Log Event Types",
        "tags": [
          "Audit Logs"
        ],
        "description": "Retrieve a list of available audit log event types for filtering and categorization.",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auditLogs/{auditLogId}": {
      "get": {
        "operationId": "getAuditLogEventById",
        "summary": "Get Audit Log Event by ID",
        "tags": [
          "Audit Logs"
        ],
        "description": "Retrieve detailed information about a specific audit log event by its unique identifier.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "auditLogId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "auditLogId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "eventType": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "userId": {
                          "type": "string"
                        },
                        "organizationId": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object",
                          "additionalProperties": {}
                        }
                      },
                      "required": [
                        "auditLogId",
                        "createdAt",
                        "eventType",
                        "title",
                        "metadata"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stripe/paymentIntent": {
      "post": {
        "operationId": "createStripePaymentIntent",
        "summary": "Create Stripe Payment Intent",
        "tags": [
          "Stripe"
        ],
        "description": "Create a new Stripe payment intent for processing payments through the Stripe payment provider.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentRequestId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "paymentRequestId",
                  "amount"
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "paymentRequestId": "pr_1234567890abcdef",
                    "amount": 25,
                    "token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleGFtcGxlIjoiZXhhbXBsZV90b2tlbl9kYXRhIn0uZXhhbXBsZV9zaWduYXR1cmU"
                  }
                },
                "example2": {
                  "value": {
                    "paymentRequestId": "pr_0987654321fedcba",
                    "amount": 80
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "clientSecret": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "clientSecret"
                      ],
                      "example": {
                        "id": "pi_example1234567890",
                        "clientSecret": "pi_example1234567890_secret_example1234567890"
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "description": "Object containing the links to the related endpoints",
                          "type": "object",
                          "properties": {
                            "self": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the request itself",
                                  "type": "string"
                                }
                              }
                            },
                            "next": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the next page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "prev": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the previous page of results in a paginated response. If there are no more results, this field may be omitted",
                                  "type": "string"
                                }
                              }
                            },
                            "first": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "last": {
                              "type": "object",
                              "properties": {
                                "href": {
                                  "description": "URL pointing to the first page of results in a paginated response",
                                  "type": "string"
                                }
                              }
                            },
                            "pages": {
                              "description": "It may contain a list of other useful URLs, e.g. one entry for page:'page 1', 'page 2'",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "self",
                            "first",
                            "last",
                            "pages"
                          ]
                        },
                        "totalCount": {
                          "description": "Number representing the total number of available items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stripe/webhook": {
      "post": {
        "operationId": "handleStripeWebhook",
        "summary": "Stripe Webhook Handler",
        "tags": [
          "Stripe"
        ],
        "description": "Handle webhook events from Stripe payment provider. This endpoint processes payment status updates, failed payments, and other Stripe events to keep transaction status in sync.",
        "security": [],
        "responses": {
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tester/resource-cleanup": {
      "delete": {
        "operationId": "resourceCleanup",
        "summary": "Resource Cleanup",
        "tags": [
          "Tester"
        ],
        "description": "Clean up test resources for the organization. This endpoint is used for testing and development purposes to reset the system state during our E2E tests.",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "validation": {},
                    "validationContext": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "detail",
                    "requestId",
                    "name"
                  ]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "code": "400",
                      "detail": "Bad Request - Invalid input data",
                      "requestId": "req_1234567890abcdef",
                      "name": "BadRequestError"
                    }
                  },
                  "example2": {
                    "value": {
                      "code": "401",
                      "detail": "Unauthorized - Missing or invalid JWT token",
                      "requestId": "req_0987654321fedcba",
                      "name": "UnauthorizedError"
                    }
                  },
                  "example3": {
                    "value": {
                      "code": "404",
                      "detail": "Not Found - Resource not found",
                      "requestId": "req_fedcba0987654321",
                      "name": "NotFoundError"
                    }
                  },
                  "example4": {
                    "value": {
                      "code": "422",
                      "detail": "Unprocessable Entity - Validation failed",
                      "requestId": "req_abcdef1234567890",
                      "name": "ValidationError",
                      "validation": {
                        "field": "title.en",
                        "message": "Title in English is required"
                      },
                      "validationContext": "body"
                    }
                  },
                  "example5": {
                    "value": {
                      "code": "500",
                      "detail": "Internal Server Error - An unexpected error occurred",
                      "requestId": "req_1234567890fedcba",
                      "name": "InternalServerError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:8001",
      "description": "Local development environment"
    },
    {
      "url": "https://payments-api.dev.services.gov.ie",
      "description": "Development environment"
    },
    {
      "url": "https://payments-api.uat.services.gov.ie",
      "description": "UAT environment"
    },
    {
      "url": "https://payments-api.services.gov.ie",
      "description": "Production environment"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Health",
      "description": "Health check and system status endpoints"
    },
    {
      "name": "Version",
      "description": "Application version information"
    },
    {
      "name": "Payment Requests",
      "description": "Manage payment requests and their lifecycle"
    },
    {
      "name": "Transactions",
      "description": "Handle payment transactions, status updates, and transaction management"
    },
    {
      "name": "Refunds",
      "description": "Process and manage payment refunds"
    },
    {
      "name": "Providers",
      "description": "Configure and manage payment providers"
    },
    {
      "name": "Stripe",
      "description": "Stripe payment provider integration endpoints"
    },
    {
      "name": "Realex",
      "description": "Realex payment provider integration endpoints"
    },
    {
      "name": "Citizen",
      "description": "Citizen-facing payment and transaction endpoints"
    },
    {
      "name": "Audit Logs",
      "description": "Access and manage audit logs for compliance and monitoring"
    },
    {
      "name": "Tester",
      "description": "Testing and development utilities"
    }
  ]
}